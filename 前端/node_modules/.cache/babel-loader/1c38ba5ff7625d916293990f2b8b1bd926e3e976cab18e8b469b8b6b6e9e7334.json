{"ast":null,"code":"import _regenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport default {\n  name: 'Statistics',\n  data: function data() {\n    return {\n      stats: {\n        total: 0,\n        monthly: 0,\n        today: 0\n      },\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.n = 1;\n            return _this.fetchStatistics();\n          case 1:\n            _context.n = 2;\n            return _this.fetchTrend();\n          case 2:\n            _this.initChart();\n            // 监听窗口大小变化，重新调整图表大小\n            window.addEventListener('resize', _this.resizeChart);\n          case 3:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n      window.removeEventListener('resize', this.resizeChart);\n    }\n  },\n  methods: {\n    fetchStatistics: function fetchStatistics() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$_this2$$http$g, data, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return _this2.$http.get('/api/statistics/blog');\n            case 1:\n              _yield$_this2$$http$g = _context2.v;\n              data = _yield$_this2$$http$g.data;\n              _this2.stats = data;\n              _context2.n = 3;\n              break;\n            case 2:\n              _context2.p = 2;\n              _t = _context2.v;\n              _this2.$message.error('获取统计数据失败');\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 2]]);\n      }))();\n    },\n    fetchTrend: function fetchTrend() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _yield$_this3$$http$g, data, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return _this3.$http.get('/api/statistics/trend');\n            case 1:\n              _yield$_this3$$http$g = _context3.v;\n              data = _yield$_this3$$http$g.data;\n              _this3.initChart(data);\n              _context3.n = 3;\n              break;\n            case 2:\n              _context3.p = 2;\n              _t2 = _context3.v;\n              _this3.$message.error('获取趋势数据失败');\n            case 3:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 2]]);\n      }))();\n    },\n    initChart: function initChart() {\n      var _this4 = this;\n      var trend = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      // 确保echarts已加载\n      if (!window.echarts) {\n        import('echarts').then(function (echarts) {\n          _this4.chart = echarts.init(_this4.$refs.trendChart);\n          _this4.setChartOption(trend);\n        });\n      } else {\n        this.chart = window.echarts.init(this.$refs.trendChart);\n        this.setChartOption(trend);\n      }\n    },\n    setChartOption: function setChartOption(trend) {\n      var option = {\n        title: {\n          text: '近30天博客发布趋势'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: trend.map(function (item) {\n            return item.date;\n          })\n        },\n        yAxis: {\n          type: 'value',\n          minInterval: 1\n        },\n        series: [{\n          data: trend.map(function (item) {\n            return item.count;\n          }),\n          type: 'line',\n          smooth: true,\n          areaStyle: {}\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    resizeChart: function resizeChart() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","stats","total","monthly","today","chart","mounted","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","fetchStatistics","fetchTrend","initChart","window","addEventListener","resizeChart","a","beforeDestroy","dispose","removeEventListener","methods","_this2","_callee2","_yield$_this2$$http$g","_t","_context2","p","$http","get","v","$message","error","_this3","_callee3","_yield$_this3$$http$g","_t2","_context3","_this4","trend","arguments","length","undefined","echarts","then","init","$refs","trendChart","setChartOption","option","title","text","tooltip","trigger","xAxis","type","map","item","date","yAxis","minInterval","series","count","smooth","areaStyle","setOption","resize"],"sources":["src/views/Statistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"statistics\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">博客总数</div>\r\n          <div class=\"data-box\">{{ stats.total || 0 }}</div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">本月发布</div>\r\n          <div class=\"data-box\">{{ stats.monthly || 0 }}</div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">今日发布</div>\r\n          <div class=\"data-box\">{{ stats.today || 0 }}</div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <el-card class=\"chart-card\">\r\n      <div slot=\"header\">博客发布趋势</div>\r\n      <div ref=\"trendChart\" style=\"height: 400px\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Statistics',\r\n  data() {\r\n    return {\r\n      stats: {\r\n        total: 0,\r\n        monthly: 0,\r\n        today: 0\r\n      },\r\n      chart: null\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.fetchStatistics()\r\n    await this.fetchTrend()\r\n    this.initChart()\r\n    // 监听窗口大小变化，重新调整图表大小\r\n    window.addEventListener('resize', this.resizeChart)\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      window.removeEventListener('resize', this.resizeChart)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStatistics() {\r\n      try {\r\n        const { data } = await this.$http.get('/api/statistics/blog')\r\n        this.stats = data\r\n      } catch (error) {\r\n        this.$message.error('获取统计数据失败')\r\n      }\r\n    },\r\n    async fetchTrend() {\r\n      try {\r\n        const { data } = await this.$http.get('/api/statistics/trend')\r\n        this.initChart(data)\r\n      } catch (error) {\r\n        this.$message.error('获取趋势数据失败')\r\n      }\r\n    },\r\n    initChart(trend = []) {\r\n      // 确保echarts已加载\r\n      if (!window.echarts) {\r\n        import('echarts').then(echarts => {\r\n          this.chart = echarts.init(this.$refs.trendChart)\r\n          this.setChartOption(trend)\r\n        })\r\n      } else {\r\n        this.chart = window.echarts.init(this.$refs.trendChart)\r\n        this.setChartOption(trend)\r\n      }\r\n    },\r\n    setChartOption(trend) {\r\n      const option = {\r\n        title: {\r\n          text: '近30天博客发布趋势'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: trend.map(item => item.date)\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          minInterval: 1\r\n        },\r\n        series: [{\r\n          data: trend.map(item => item.count),\r\n          type: 'line',\r\n          smooth: true,\r\n          areaStyle: {}\r\n        }]\r\n      }\r\n      this.chart.setOption(option)\r\n    },\r\n    resizeChart() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.statistics {\r\n  padding: 20px;\r\n}\r\n.data-box {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #409EFF;\r\n}\r\n.chart-card {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}