{"ast":null,"code":"import _regenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport echarts from 'echarts';\nexport default {\n  name: 'Statistics',\n  data: function data() {\n    return {\n      totalBlogs: 0,\n      monthlyBlogs: 0,\n      todayBlogs: 0,\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.n = 1;\n            return _this.fetchStatistics();\n          case 1:\n            _this.initChart();\n          case 2:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    fetchStatistics: function fetchStatistics() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$_this2$$http$g, data, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return _this2.$http.get('/api/blogs/statistics');\n            case 1:\n              _yield$_this2$$http$g = _context2.v;\n              data = _yield$_this2$$http$g.data;\n              _this2.totalBlogs = data.total;\n              _this2.monthlyBlogs = data.monthly;\n              _this2.todayBlogs = data.today;\n              _this2.initChart(data.trend);\n              _context2.n = 3;\n              break;\n            case 2:\n              _context2.p = 2;\n              _t = _context2.v;\n              _this2.$message.error('获取统计数据失败');\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 2]]);\n      }))();\n    },\n    initChart: function initChart() {\n      var trend = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.chart = echarts.init(this.$refs.trendChart);\n      this.chart.setOption({\n        title: {\n          text: '近30天博客发布趋势'\n        },\n        xAxis: {\n          type: 'category',\n          data: trend.map(function (item) {\n            return item.date;\n          })\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: trend.map(function (item) {\n            return item.count;\n          }),\n          type: 'line',\n          smooth: true\n        }]\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","totalBlogs","monthlyBlogs","todayBlogs","chart","mounted","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","fetchStatistics","initChart","a","methods","_this2","_callee2","_yield$_this2$$http$g","_t","_context2","p","$http","get","v","total","monthly","today","trend","$message","error","arguments","length","undefined","init","$refs","trendChart","setOption","title","text","xAxis","type","map","item","date","yAxis","series","count","smooth","beforeDestroy","dispose"],"sources":["src/views/Statistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"statistics\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">博客总数</div>\r\n          <div class=\"data-box\">{{ stats.total || 0 }}</div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">本月发布</div>\r\n          <div class=\"data-box\">{{ monthlyBlogs }}</div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div slot=\"header\">今日发布</div>\r\n          <div class=\"data-box\">{{ todayBlogs }}</div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <el-card class=\"chart-card\">\r\n      <div slot=\"header\">博客发布趋势</div>\r\n      <div ref=\"trendChart\" style=\"height: 400px\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'Statistics',\r\n  data() {\r\n    return {\r\n      totalBlogs: 0,\r\n      monthlyBlogs: 0,\r\n      todayBlogs: 0,\r\n      chart: null\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.fetchStatistics()\r\n    this.initChart()\r\n  },\r\n  methods: {\r\n    async fetchStatistics() {\r\n      try {\r\n        const { data } = await this.$http.get('/api/blogs/statistics')\r\n        this.totalBlogs = data.total\r\n        this.monthlyBlogs = data.monthly\r\n        this.todayBlogs = data.today\r\n        this.initChart(data.trend)\r\n      } catch (error) {\r\n        this.$message.error('获取统计数据失败')\r\n      }\r\n    },\r\n    initChart(trend = []) {\r\n      this.chart = echarts.init(this.$refs.trendChart)\r\n      this.chart.setOption({\r\n        title: { text: '近30天博客发布趋势' },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: trend.map(item => item.date)\r\n        },\r\n        yAxis: { type: 'value' },\r\n        series: [{\r\n          data: trend.map(item => item.count),\r\n          type: 'line',\r\n          smooth: true\r\n        }]\r\n      })\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.statistics {\r\n  padding: 20px;\r\n}\r\n.data-box {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #409EFF;\r\n}\r\n.chart-card {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;AA+BA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;MACAC,YAAA;MACAC,UAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;MAAA,OAAAF,YAAA,GAAAG,CAAA,WAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,CAAA;UAAA;YAAAD,QAAA,CAAAC,CAAA;YAAA,OACAP,KAAA,CAAAQ,eAAA;UAAA;YACAR,KAAA,CAAAS,SAAA;UAAA;YAAA,OAAAH,QAAA,CAAAI,CAAA;QAAA;MAAA,GAAAN,OAAA;IAAA;EACA;EACAO,OAAA;IACAH,eAAA,WAAAA,gBAAA;MAAA,IAAAI,MAAA;MAAA,OAAAX,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAU,SAAA;QAAA,IAAAC,qBAAA,EAAApB,IAAA,EAAAqB,EAAA;QAAA,OAAAb,YAAA,GAAAG,CAAA,WAAAW,SAAA;UAAA,kBAAAA,SAAA,CAAAT,CAAA;YAAA;cAAAS,SAAA,CAAAC,CAAA;cAAAD,SAAA,CAAAT,CAAA;cAAA,OAEAK,MAAA,CAAAM,KAAA,CAAAC,GAAA;YAAA;cAAAL,qBAAA,GAAAE,SAAA,CAAAI,CAAA;cAAA1B,IAAA,GAAAoB,qBAAA,CAAApB,IAAA;cACAkB,MAAA,CAAAjB,UAAA,GAAAD,IAAA,CAAA2B,KAAA;cACAT,MAAA,CAAAhB,YAAA,GAAAF,IAAA,CAAA4B,OAAA;cACAV,MAAA,CAAAf,UAAA,GAAAH,IAAA,CAAA6B,KAAA;cACAX,MAAA,CAAAH,SAAA,CAAAf,IAAA,CAAA8B,KAAA;cAAAR,SAAA,CAAAT,CAAA;cAAA;YAAA;cAAAS,SAAA,CAAAC,CAAA;cAAAF,EAAA,GAAAC,SAAA,CAAAI,CAAA;cAEAR,MAAA,CAAAa,QAAA,CAAAC,KAAA;YAAA;cAAA,OAAAV,SAAA,CAAAN,CAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEA;IACAJ,SAAA,WAAAA,UAAA;MAAA,IAAAe,KAAA,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;MACA,KAAA7B,KAAA,GAAAN,OAAA,CAAAsC,IAAA,MAAAC,KAAA,CAAAC,UAAA;MACA,KAAAlC,KAAA,CAAAmC,SAAA;QACAC,KAAA;UAAAC,IAAA;QAAA;QACAC,KAAA;UACAC,IAAA;UACA3C,IAAA,EAAA8B,KAAA,CAAAc,GAAA,WAAAC,IAAA;YAAA,OAAAA,IAAA,CAAAC,IAAA;UAAA;QACA;QACAC,KAAA;UAAAJ,IAAA;QAAA;QACAK,MAAA;UACAhD,IAAA,EAAA8B,KAAA,CAAAc,GAAA,WAAAC,IAAA;YAAA,OAAAA,IAAA,CAAAI,KAAA;UAAA;UACAN,IAAA;UACAO,MAAA;QACA;MACA;IACA;EACA;EACAC,aAAA,WAAAA,cAAA;IACA,SAAA/C,KAAA;MACA,KAAAA,KAAA,CAAAgD,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}