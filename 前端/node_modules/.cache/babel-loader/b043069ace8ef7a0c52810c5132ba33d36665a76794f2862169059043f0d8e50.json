{"ast":null,"code":"import _regenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"E:/\\u4EA4\\u4ED8\\u4E8C/\\u661F\\u671F\\u56DB\\u4E4B\\u524Dvue\\u4F5C\\u4E1A/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Profile',\n  data: function data() {\n    var _this = this;\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value && value !== _this.userForm.newPassword) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      userForm: {\n        username: '',\n        email: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    fetchUserInfo: function fetchUserInfo() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _yield$_this2$$http$g, data, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _this2.$http.get('/api/users/profile');\n            case 1:\n              _yield$_this2$$http$g = _context.v;\n              data = _yield$_this2$$http$g.data;\n              _this2.userForm.username = data.username;\n              _this2.userForm.email = data.email;\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              _this2.$message.error('获取用户信息失败');\n            case 3:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2]]);\n      }))();\n    },\n    updateProfile: function updateProfile() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return _this3.$refs.userForm.validate();\n            case 1:\n              _context2.n = 2;\n              return _this3.$http.put('/api/users/profile', _this3.userForm);\n            case 2:\n              _this3.$message.success('更新成功');\n              if (_this3.userForm.newPassword) {\n                _this3.$router.push('/login');\n              }\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              _this3.$message.error('更新失败');\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 3]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["name","data","_this","validatePass","rule","value","callback","userForm","newPassword","Error","username","email","confirmPassword","rules","required","message","trigger","type","validator","created","fetchUserInfo","methods","_this2","_asyncToGenerator","_regenerator","m","_callee","_yield$_this2$$http$g","_t","w","_context","n","p","$http","get","v","$message","error","a","updateProfile","_this3","_callee2","_t2","_context2","$refs","validate","put","success","$router","push"],"sources":["src/views/Profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile\">\r\n    <el-card class=\"profile-card\">\r\n      <div slot=\"header\">\r\n        <span>个人信息</span>\r\n      </div>\r\n      <el-form :model=\"userForm\" :rules=\"rules\" ref=\"userForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"userForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input type=\"password\" v-model=\"userForm.newPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"userForm.confirmPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"updateProfile\">保存修改</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Profile',\r\n  data() {\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value && value !== this.userForm.newPassword) {\r\n        callback(new Error('两次输入密码不一致'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      userForm: {\r\n        username: '',\r\n        email: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      rules: {\r\n        email: [\r\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [{ validator: validatePass, trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUserInfo()\r\n  },\r\n  methods: {\r\n    async fetchUserInfo() {\r\n      try {\r\n        const { data } = await this.$http.get('/api/users/profile')\r\n        this.userForm.username = data.username\r\n        this.userForm.email = data.email\r\n      } catch (error) {\r\n        this.$message.error('获取用户信息失败')\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      try {\r\n        await this.$refs.userForm.validate()\r\n        await this.$http.put('/api/users/profile', this.userForm)\r\n        this.$message.success('更新成功')\r\n        if (this.userForm.newPassword) {\r\n          this.$router.push('/login')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('更新失败')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.profile {\r\n  padding: 20px;\r\n}\r\n.profile-card {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AA4BA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IAAA,IAAAC,KAAA;IACA,IAAAC,YAAA,YAAAA,aAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,IAAAA,KAAA,KAAAH,KAAA,CAAAK,QAAA,CAAAC,WAAA;QACAF,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACAC,QAAA;QACAG,QAAA;QACAC,KAAA;QACAH,WAAA;QACAI,eAAA;MACA;MACAC,KAAA;QACAF,KAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,eAAA;UAAAM,SAAA,EAAAf,YAAA;UAAAa,OAAA;QAAA;MACA;IACA;EACA;EACAG,OAAA,WAAAA,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,aAAA,WAAAA,cAAA;MAAA,IAAAE,MAAA;MAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;QAAA,IAAAC,qBAAA,EAAA1B,IAAA,EAAA2B,EAAA;QAAA,OAAAJ,YAAA,GAAAK,CAAA,WAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,CAAA;YAAA;cAAAD,QAAA,CAAAE,CAAA;cAAAF,QAAA,CAAAC,CAAA;cAAA,OAEAT,MAAA,CAAAW,KAAA,CAAAC,GAAA;YAAA;cAAAP,qBAAA,GAAAG,QAAA,CAAAK,CAAA;cAAAlC,IAAA,GAAA0B,qBAAA,CAAA1B,IAAA;cACAqB,MAAA,CAAAf,QAAA,CAAAG,QAAA,GAAAT,IAAA,CAAAS,QAAA;cACAY,MAAA,CAAAf,QAAA,CAAAI,KAAA,GAAAV,IAAA,CAAAU,KAAA;cAAAmB,QAAA,CAAAC,CAAA;cAAA;YAAA;cAAAD,QAAA,CAAAE,CAAA;cAAAJ,EAAA,GAAAE,QAAA,CAAAK,CAAA;cAEAb,MAAA,CAAAc,QAAA,CAAAC,KAAA;YAAA;cAAA,OAAAP,QAAA,CAAAQ,CAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA;IAEA;IACAa,aAAA,WAAAA,cAAA;MAAA,IAAAC,MAAA;MAAA,OAAAjB,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAgB,SAAA;QAAA,IAAAC,GAAA;QAAA,OAAAlB,YAAA,GAAAK,CAAA,WAAAc,SAAA;UAAA,kBAAAA,SAAA,CAAAZ,CAAA;YAAA;cAAAY,SAAA,CAAAX,CAAA;cAAAW,SAAA,CAAAZ,CAAA;cAAA,OAEAS,MAAA,CAAAI,KAAA,CAAArC,QAAA,CAAAsC,QAAA;YAAA;cAAAF,SAAA,CAAAZ,CAAA;cAAA,OACAS,MAAA,CAAAP,KAAA,CAAAa,GAAA,uBAAAN,MAAA,CAAAjC,QAAA;YAAA;cACAiC,MAAA,CAAAJ,QAAA,CAAAW,OAAA;cACA,IAAAP,MAAA,CAAAjC,QAAA,CAAAC,WAAA;gBACAgC,MAAA,CAAAQ,OAAA,CAAAC,IAAA;cACA;cAAAN,SAAA,CAAAZ,CAAA;cAAA;YAAA;cAAAY,SAAA,CAAAX,CAAA;cAAAU,GAAA,GAAAC,SAAA,CAAAR,CAAA;cAEAK,MAAA,CAAAJ,QAAA,CAAAC,KAAA;YAAA;cAAA,OAAAM,SAAA,CAAAL,CAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}