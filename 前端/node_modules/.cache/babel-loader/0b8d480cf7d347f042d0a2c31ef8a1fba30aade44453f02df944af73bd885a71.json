{"ast":null,"code":"import _regenerator from \"D:/Desktop/projects/blog/\\u524D\\u7AEF/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"D:/Desktop/projects/blog/\\u524D\\u7AEF/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/Desktop/projects/blog/\\u524D\\u7AEF/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from 'vuex';\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      activeTab: 'login',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations(['setToken'])), {}, {\n    handleLogin: function handleLogin() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _yield$_this$$http$po, data, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _this.$refs.loginForm.validate();\n            case 1:\n              _context.n = 2;\n              return _this.$http.post('/api/users/login', _this.loginForm);\n            case 2:\n              _yield$_this$$http$po = _context.v;\n              data = _yield$_this$$http$po.data;\n              _this.setToken(data.token);\n              _this.$message.success('登录成功');\n              _this.$router.push('/home/blog-list');\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              _this.$message.error('登录失败');\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 3]]);\n      }))();\n    },\n    handleRegister: function handleRegister() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return _this2.$refs.registerForm.validate();\n            case 1:\n              _context2.n = 2;\n              return _this2.$http.post('/api/users/register', _this2.registerForm);\n            case 2:\n              _this2.$message.success('注册成功');\n              _this2.activeTab = 'login';\n              _this2.loginForm = _objectSpread({}, _this2.registerForm);\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              _this2.$message.error('注册失败');\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 3]]);\n      }))();\n    }\n  })\n};","map":{"version":3,"names":["mapMutations","name","data","activeTab","loginForm","username","password","registerForm","rules","required","message","trigger","methods","_objectSpread","handleLogin","_this","_asyncToGenerator","_regenerator","m","_callee","_yield$_this$$http$po","_t","w","_context","n","p","$refs","validate","$http","post","v","setToken","token","$message","success","$router","push","error","a","handleRegister","_this2","_callee2","_t2","_context2"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">博客系统</div>\r\n      <el-tabs v-model=\"activeTab\">\r\n        <el-tab-pane label=\"登录\" name=\"login\">\r\n          <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"密码\"></el-input>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleLogin\" block>登录</el-button>\r\n          </el-form>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"注册\" name=\"register\">\r\n          <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input v-model=\"registerForm.username\" placeholder=\"用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"密码\"></el-input>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleRegister\" block>注册</el-button>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      activeTab: 'login',\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      registerForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(['setToken']),\r\n    async handleLogin() {\r\n      try {\r\n        await this.$refs.loginForm.validate()\r\n        const { data } = await this.$http.post('/api/users/login', this.loginForm)\r\n        this.setToken(data.token)\r\n        this.$message.success('登录成功')\r\n        this.$router.push('/home/blog-list')\r\n      } catch (error) {\r\n        this.$message.error('登录失败')\r\n      }\r\n    },\r\n    async handleRegister() {\r\n      try {\r\n        await this.$refs.registerForm.validate()\r\n        await this.$http.post('/api/users/register', this.registerForm)\r\n        this.$message.success('注册成功')\r\n        this.activeTab = 'login'\r\n        this.loginForm = { ...this.registerForm }\r\n      } catch (error) {\r\n        this.$message.error('注册失败')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f3f3f3;\r\n}\r\n.login-card {\r\n  width: 400px;\r\n}\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;;AAiCA,SAAAA,YAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,YAAA;QACAF,QAAA;QACAC,QAAA;MACA;MACAE,KAAA;QACAH,QAAA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAL,QAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA,EAAAC,aAAA,CAAAA,aAAA,KACAb,YAAA;IACAc,WAAA,WAAAA,YAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;QAAA,IAAAC,qBAAA,EAAAlB,IAAA,EAAAmB,EAAA;QAAA,OAAAJ,YAAA,GAAAK,CAAA,WAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,CAAA;YAAA;cAAAD,QAAA,CAAAE,CAAA;cAAAF,QAAA,CAAAC,CAAA;cAAA,OAEAT,KAAA,CAAAW,KAAA,CAAAtB,SAAA,CAAAuB,QAAA;YAAA;cAAAJ,QAAA,CAAAC,CAAA;cAAA,OACAT,KAAA,CAAAa,KAAA,CAAAC,IAAA,qBAAAd,KAAA,CAAAX,SAAA;YAAA;cAAAgB,qBAAA,GAAAG,QAAA,CAAAO,CAAA;cAAA5B,IAAA,GAAAkB,qBAAA,CAAAlB,IAAA;cACAa,KAAA,CAAAgB,QAAA,CAAA7B,IAAA,CAAA8B,KAAA;cACAjB,KAAA,CAAAkB,QAAA,CAAAC,OAAA;cACAnB,KAAA,CAAAoB,OAAA,CAAAC,IAAA;cAAAb,QAAA,CAAAC,CAAA;cAAA;YAAA;cAAAD,QAAA,CAAAE,CAAA;cAAAJ,EAAA,GAAAE,QAAA,CAAAO,CAAA;cAEAf,KAAA,CAAAkB,QAAA,CAAAI,KAAA;YAAA;cAAA,OAAAd,QAAA,CAAAe,CAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA;IAEA;IACAoB,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MAAA,OAAAxB,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAuB,SAAA;QAAA,IAAAC,GAAA;QAAA,OAAAzB,YAAA,GAAAK,CAAA,WAAAqB,SAAA;UAAA,kBAAAA,SAAA,CAAAnB,CAAA;YAAA;cAAAmB,SAAA,CAAAlB,CAAA;cAAAkB,SAAA,CAAAnB,CAAA;cAAA,OAEAgB,MAAA,CAAAd,KAAA,CAAAnB,YAAA,CAAAoB,QAAA;YAAA;cAAAgB,SAAA,CAAAnB,CAAA;cAAA,OACAgB,MAAA,CAAAZ,KAAA,CAAAC,IAAA,wBAAAW,MAAA,CAAAjC,YAAA;YAAA;cACAiC,MAAA,CAAAP,QAAA,CAAAC,OAAA;cACAM,MAAA,CAAArC,SAAA;cACAqC,MAAA,CAAApC,SAAA,GAAAS,aAAA,KAAA2B,MAAA,CAAAjC,YAAA;cAAAoC,SAAA,CAAAnB,CAAA;cAAA;YAAA;cAAAmB,SAAA,CAAAlB,CAAA;cAAAiB,GAAA,GAAAC,SAAA,CAAAb,CAAA;cAEAU,MAAA,CAAAP,QAAA,CAAAI,KAAA;YAAA;cAAA,OAAAM,SAAA,CAAAL,CAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEA;EAAA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}